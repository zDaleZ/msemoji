#!/usr/bin/env node

debugger;

const path = require('path');
const { spawnSync } = require('child_process');
const fs = require('fs-extra');
const os = require('os');
const getStrings = require('./get-strings');
const fromCharCode = String.fromCharCode;

const tempDir = path.join(__dirname, 'tmp');
const fileDest = path.join(__dirname, 'build-regexp');
const sourceFile = path.join(__dirname, 'emojilist.txt');
const tempFile = path.join(tempDir, 'emojitemp.txt');
const generatedFile = path.join(tempDir, 'emojigen.txt');
const final = path.join(__dirname, 'regex.js');

fs.mkdirSync(tempDir);

function parseToRealEmoji(str) {
    const array = str.split(/\r\n|\n|\r/)
        .filter(line => line.trim() !== '')
        .map(fromCodePoints);
    return getStrings(array);
}

function fromCodePoints(codepoints) {
    return codepoints
               .split('-')
               .map(fromCodePoint)
               .join('');
}

function fromCodePoint(codepoint) {
    var code = typeof codepoint === 'string' ?
        parseInt(codepoint, 16) : codepoint;
    if (code < 0x10000) {
        return fromCharCode(code);
    }
    code -= 0x10000;
    return fromCharCode(
        0xD800 + (code >> 10),
        0xDC00 + (code & 0x3FF)
    );
}

const tempContent = fs.readFileSync(sourceFile).toString();
const processdTemp = parseToRealEmoji(tempContent);
fs.writeFileSync(tempFile, processdTemp);

if (os.platform() === 'win32') {
    spawnSync('php', [
        `${fileDest}`,
        '--infile', tempFile,
        '--preset', 'javascript',
        '--outfile', generatedFile,
        '--standalone',
        '--overwrite'
    ], { stdio: 'inherit' });
} else {
    spawnSync(`./${fileDest}`, [
        '--infile', tempFile,
        '--preset', 'javascript',
        '--outfile', generatedFile,
        '--standalone',
        '--overwrite'
    ], { stdio: 'inherit' });
}

const contents = fs.readFileSync(generatedFile);
fs.writeFileSync(final, `"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
// Copyright Twitter Inc. Licensed under MIT
// https://github.com/twitter/twemoji-parser/blob/master/LICENSE.md

/*! msemoji is modified from twemoji by DaleZ(zDaleZ). License inherits Twemoji. */

// This file is generated by /scripts/create-regexp
exports.default = /${contents}/g`);

fs.rmSync(tempDir, { recursive: true });